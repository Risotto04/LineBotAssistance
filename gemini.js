const { GoogleGenerativeAI } = require("@google/generative-ai");
const dayjs = require("dayjs");
const chalk = require("chalk");
const API_KEY = "AIzaSyBMdeVlKLL_rrup5vxHCKXgp22SEUUqSnk";
const genAI = new GoogleGenerativeAI(API_KEY);
const multimodal = async (imageBinary) => {
  const model = genAI.getGenerativeModel({ model: "gemini-pro-vision" });
  const prompt = "‡∏ä‡πà‡∏ß‡∏¢‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢";
  const mimeType = "image/png";

  const imageParts = [
    {
      inlineData: {
        data: Buffer.from(imageBinary, "binary").toString("base64"),
        mimeType,
      },
    },
  ];

  try {
    const result = await model.generateContent([prompt, ...imageParts]);
    const text = result.response.text();
    return text;
  } catch (e) {
    console.log(
      `üö®üö®üö® ${chalk.redBright.bold(dayjs().format("DD/MM/YYYY h:mm:ss"))} ${
        e.message
      }`
    );
    return "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ";
  }
};

const chat = async (prompt) => {
  const model = genAI.getGenerativeModel({ model: "gemini-pro" });
  const chat = model.startChat({
    history: [
      {
        role: "user",
        parts: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ",
      },
      {
        role: "model",
        parts: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ CoPilot ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
      },
      {
        role: "user",
        parts: "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£",
      },
      {
        role: "model",
        parts:
          "‡∏ú‡∏° CoPilot ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ô‡∏≥ Gemini ‡∏°‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Line Bot\n‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ß‡∏¥‡∏ä‡∏≤ Operating system",
      },
      {
        role: "user",
        parts: "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏â‡∏±‡∏ô‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏î‡πâ",
      },
      {
        role: "model",
        parts:
          "‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏≤‡∏Å ‡πÜ ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏á‡πà‡∏≤‡∏¢ ‡πÜ ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
      },
    ],
  });

  try {
    const result = await chat.sendMessage(prompt);
    return result.response.text();
  } catch (e) {
    console.log(
      `üö®üö®üö® ${chalk.redBright.bold(dayjs().format("DD/MM/YYYY h:mm:ss"))} ${
        e.message
      }`
    );
    return "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ";
  }
};

module.exports = { multimodal, chat };
